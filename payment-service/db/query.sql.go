// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.0
// source: query.sql

package db

import (
	"context"
	"database/sql"
	"time"
)

const createPayment = `-- name: CreatePayment :execresult
INSERT INTO payments (
    id, payment_status, complete_time,
    create_time, update_time
)
VALUES (?, ?, ?, ?, ?)
`

type CreatePaymentParams struct {
	ID            int64
	PaymentStatus string
	CompleteTime  sql.NullTime
	CreateTime    time.Time
	UpdateTime    time.Time
}

func (q *Queries) CreatePayment(ctx context.Context, arg CreatePaymentParams) (sql.Result, error) {
	return q.db.ExecContext(ctx, createPayment,
		arg.ID,
		arg.PaymentStatus,
		arg.CompleteTime,
		arg.CreateTime,
		arg.UpdateTime,
	)
}

const createTransaction = `-- name: CreateTransaction :execresult
INSERT INTO transactions (
    transaction_status, event_id,
    payment_id, create_time, update_time
)
VALUES (?, ?, ?, ?, ?)
`

type CreateTransactionParams struct {
	TransactionStatus string
	EventID           int64
	PaymentID         int64
	CreateTime        time.Time
	UpdateTime        time.Time
}

func (q *Queries) CreateTransaction(ctx context.Context, arg CreateTransactionParams) (sql.Result, error) {
	return q.db.ExecContext(ctx, createTransaction,
		arg.TransactionStatus,
		arg.EventID,
		arg.PaymentID,
		arg.CreateTime,
		arg.UpdateTime,
	)
}
